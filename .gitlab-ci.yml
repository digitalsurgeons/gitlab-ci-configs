include:
  - local: '/.gitlab-ci.deployments.yml'
  # Generic dev/feature deployments
  - local: '/.gitlab-ci.features.yml'
  # Generic front-end build:
  - local: '/.gitlab-ci.build-frontend.yml'
  # Generic composer build:
  - local: '/.gitlab-ci.build-composer.yml'
  # Cloudflare cache clearing:
  - local: '/.gitlab-ci.cloudflare.yml'
  # Generic cypress testing:
  - local: '/.gitlab-ci.cypress.yml'

deploy_prod:
  extends: .deploy
  script:
    - >
      if [ $RUN_COMPOSER == "true" ] && [ $CI_COMMIT_MESSAGE != *"skip-backend-build"* ]; then
        curl -O -L https://gitlab.com/digitalsurgeons/gitlab-ci-configs/raw/master/.rsyncignore-vendor
        rsync --copy-unsafe-links -rvzcSl --exclude-from '.rsyncignore-vendor' --delete ./ $SERVER_DETAILS_PRD:$SERVER_PATH_PRD/vendor/
      fi
    - echo "$PRD_DOTENV" > .env
    - curl -O -L https://gitlab.com/digitalsurgeons/gitlab-ci-configs/raw/master/.rsyncignore
    - rsync --copy-unsafe-links -rvzcSl --exclude-from '.rsyncignore' ./ $SERVER_DETAILS_PRD:$SERVER_PATH_PRD/
  environment:
    name: production
    url: $PRD_DOMAIN
  when: manual
  only:
    refs:
      - master
    variables:
      - $PRODUCTION == "true"
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-prod-deploy/
      - $CI_COMMIT_MESSAGE =~ /skip-deploy/

deploy_stage:
  extends: .deploy
  script:
    - >
      if [ $RUN_COMPOSER == "true" && [ $CI_COMMIT_MESSAGE != *"skip-backend-build"* ] ]; then
        curl -O -L https://gitlab.com/digitalsurgeons/gitlab-ci-configs/raw/master/.rsyncignore-vendor
        rsync --copy-unsafe-links -rvzcSl --exclude-from '.rsyncignore-vendor' --delete ./ $SERVER_DETAILS_STG:$SERVER_PATH_STG/vendor/
      fi
    - echo "$STG_DOTENV" > .env
    - curl -O -L https://gitlab.com/digitalsurgeons/gitlab-ci-configs/raw/master/.rsyncignore
    - rsync --copy-unsafe-links -rvzcSl --exclude-from '.rsyncignore' ./ $SERVER_DETAILS_STG:$SERVER_PATH_STG/
  environment:
    name: staging
    url: $STG_DOMAIN
  only:
    refs:
      # Deploy from hotfix and release branches as well as master, so we
      # can test and make modifications on those branches before finishing
      # out a branch. This leads to fewer version bumps and less repo
      # noise.
      - /^(master|hotfix\/|release\/)/
    variables:
      - $STAGING == "true"
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-stg-deploy/
      - $CI_COMMIT_MESSAGE =~ /skip-deploy/
